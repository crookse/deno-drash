name: Master

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  tests:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Install Deno
        uses: denoland/setup-deno@v1

      - name: Unit
        run: deno test tests/unit/tests.ts --config tsconfig.json --allow-net --allow-write --allow-read --allow-env

      - name: Integration
        run: |
          deno test --allow-all --config tsconfig.json tests/integration/app_3000_resources/
          # deno test --allow-all --config tsconfig.json tests/integration/app_3002_https/tests.ts
          deno test --allow-all --config tsconfig.json tests/integration/app_3003_middleware/
          deno test --allow-all --config tsconfig.json tests/integration/app_3004_pretty_links/
          deno test --allow-all --config tsconfig.json tests/integration/app_3005_middleware_resource_level/

      - name: Create App (local)
        run: |
          deno cache create_app.ts
          deno test tests/cli/create_app_test_local.ts --allow-read --allow-write --allow-run --allow-env

      - name: Create App (http)
        run: |
          deno test tests/cli/create_app_test_http.ts --allow-read --allow-write --allow-run --allow-env --allow-net

      - name: Create App API Server Runs
        run: |
          mkdir tmp1
          cd tmp1
          echo "export { Drash } from '../mod.ts'" > ../console/create_app/deps.ts # so the create app can target the local version instead of a versioned one
          deno run -A ../create_app.ts --api
          echo "server.close()" >> app.ts
          deno run -A app.ts

      - name: Create App Web App Runs
        run: |
          mkdir tmp2
          cd tmp2
          echo "export { Drash } from '../mod.ts'" > ../console/create_app/deps.ts # so the create app can target the local version instead of a versioned one
          deno run -A ../create_app.ts --web-app
          echo "server.close()" >> app.ts
          deno run -A app.ts

      - name: Create App With Vue Builds
        run: |
          mkdir tmp3
          cd tmp3
          deno run -A ../create_app.ts --web-app --with-vue
          npm i
          npm run buildVue

      - name: Create App With React Builds
        run: |
          mkdir tmp4
          cd tmp4
          deno run -A ../create_app.ts --web-app --with-react
          npm i
          npm run buildReact

  benchmarks:
    strategy:
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Install Deno
        uses: denolib/setup-deno@master

      - name: Setup Node 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'

      - name: Install Autocannon
        run: npm install -g autocannon

      - name: Run Drash Application
        run: deno run --allow-net ./console/benchmark_app.ts &

      - name: Run Autocannon Benchmarks
        run: autocannon -c 40 -d 10 -j http://localhost:1447

  linter:
    # Only one OS is required since fmt is cross platform
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Deno v${{ matrix.deno }}
        uses: denolib/setup-deno@master

      - name: Formatter
        run: deno fmt --check
