{
    "Drash.Compilers": {
        "DocBlocksToJson": {
            "fully_qualified_name": "Drash.Compilers.DocBlocksToJson",
            "namespace": "Drash.Compilers",
            "name": "DocBlocksToJson",
            "description": [
                "This compiler reads doc blocks and converts them to parsable JSON."
            ],
            "properties": {
                "current_file": {
                    "access_modifier": "protected",
                    "description": [
                        "A property to hold the name of the current file being parsed. This\nproperty only exists for debugging purposes. This class has logging to\nmake it easier for Drash developers and users to find errors during\ncompilation."
                    ],
                    "annotation": {
                        "line": "@property string current_file",
                        "data_type": "string",
                        "name": "current_file"
                    },
                    "signature": "protected current_file: string = \"\"",
                    "name": "current_file",
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.current_file"
                },
                "decoder": {
                    "access_modifier": "protected",
                    "description": [
                        "The decoder used to decode the files passed to `this.compile()`."
                    ],
                    "annotation": {
                        "line": "@property TextDecoder decoder",
                        "data_type": "TextDecoder",
                        "name": "decoder"
                    },
                    "signature": "protected decoder: TextDecoder = new TextDecoder()",
                    "name": "decoder",
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.decoder"
                },
                "parsed": {
                    "access_modifier": "protected",
                    "description": [
                        "A property to hold the final result of `this.compile()`."
                    ],
                    "annotation": {
                        "line": "@property any parsed",
                        "data_type": "any",
                        "name": "parsed"
                    },
                    "signature": "protected parsed: any = {}",
                    "name": "parsed",
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.parsed"
                },
                "parsing_members_only_file": {
                    "access_modifier": "protected",
                    "description": null,
                    "annotation": {
                        "line": "@property boolean parsing_members_only_file",
                        "data_type": "boolean",
                        "name": "parsing_members_only_file"
                    },
                    "signature": "protected parsing_members_only_file = false",
                    "name": "parsing_members_only_file",
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.parsing_members_only_file"
                }
            },
            "methods": {
                "compile": {
                    "access_modifier": "public",
                    "name": "compile",
                    "description": [
                        "Compile a JSON array containing classes, properties, and methods from\nthe specified files.",
                        "All files passed to this method will have their doc blocks parsed for\nmember data.",
                        "Any member that doesn't include the `@memberof` annotation will be\nplaced as a top-level item."
                    ],
                    "params": {
                        "files": {
                            "name": "files",
                            "description": [
                                "The array of files containing doc blocks to parse."
                            ],
                            "annotation": {
                                "line": "@param string[] files",
                                "data_type": "string[]",
                                "name": "files"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "Returns the JSON array."
                            ],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public compile(files: string[]): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.compile"
                },
                "getSection": {
                    "access_modifier": "public",
                    "name": "getSection",
                    "description": [
                        "Get the specified `@annotationname` definitions from the specified doc\nblock."
                    ],
                    "params": {
                        "annotation": {
                            "name": "annotation",
                            "description": [
                                "The annotation to get in the following format: `@annotationname`."
                            ],
                            "annotation": {
                                "line": "@param string annotation",
                                "data_type": "string",
                                "name": "annotation"
                            }
                        },
                        "docBlock": {
                            "name": "docBlock",
                            "description": [
                                "The docBlock to get the `@annotationname` definitions from."
                            ],
                            "annotation": {
                                "line": "@param string docBlock",
                                "data_type": "string",
                                "name": "docBlock"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "Returns an array of data related to the specified annotation."
                            ],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public getSection(annotation: string, docBlock: string): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.getSection"
                },
                "getAndCreateNamespace": {
                    "access_modifier": "protected",
                    "name": "getAndCreateNamespace",
                    "description": [
                        "Get the value of the `@memberof` annotation and use it to create a key\nin `this.parsed`."
                    ],
                    "params": {
                        "docBlock": {
                            "name": "docBlock",
                            "description": [
                                "The doc block in question."
                            ],
                            "annotation": {
                                "line": "@param string docBlock",
                                "data_type": "string",
                                "name": "docBlock"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getAndCreateNamespace(docBlock: string): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.getAndCreateNamespace"
                },
                "getAnnotation": {
                    "access_modifier": "protected",
                    "name": "getAnnotation",
                    "description": [
                        "Get the `@annotationname` line."
                    ],
                    "params": {
                        "annotation": {
                            "name": "annotation",
                            "description": [
                                "The annotation to get from the doc block."
                            ],
                            "annotation": {
                                "line": "@param string annotation",
                                "data_type": "string",
                                "name": "annotation"
                            }
                        },
                        "docBlock": {
                            "name": "docBlock",
                            "description": [
                                "The doc block to get the `@annotationname` definitions from."
                            ],
                            "annotation": {
                                "line": "@param string docBlock",
                                "data_type": "string",
                                "name": "docBlock"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "Returns an object containing the annotation lines data."
                            ],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getAnnotation(annotation: string, docBlock: string): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.getAnnotation"
                },
                "getDescription": {
                    "access_modifier": "protected",
                    "name": "getDescription",
                    "description": [
                        "Get the description of the specified doc block. The description is the"
                    ],
                    "params": {
                        "textBlock": {
                            "name": "textBlock",
                            "description": [
                                "The text block in question."
                            ],
                            "annotation": {
                                "line": "@param string textBlock",
                                "data_type": "string",
                                "name": "textBlock"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "Returns an array of descriptions."
                            ],
                            "annotation": {
                                "line": "@return string[]",
                                "data_type": "string[]",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getDescription(textBlock: string): string[]",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.getDescription"
                },
                "getDescriptionInParagraphs": {
                    "access_modifier": "protected",
                    "name": "getDescriptionInParagraphs",
                    "description": [
                        "Get paragraphs from the description text blocks."
                    ],
                    "params": {
                        "textBlock": {
                            "name": "textBlock",
                            "description": [
                                "The text block containing the paragraph(s)."
                            ],
                            "annotation": {
                                "line": "@param string textBlock",
                                "data_type": "string",
                                "name": "textBlock"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "Returns an array of strings. Each element in the array is a separate\nparagraph."
                            ],
                            "annotation": {
                                "line": "@return string[]",
                                "data_type": "string[]",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getDescriptionInParagraphs(textBlock: string): string[]",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.getDescriptionInParagraphs"
                },
                "getDocBlockDataForConst": {
                    "access_modifier": "protected",
                    "name": "getDocBlockDataForConst",
                    "description": [
                        "Get the doc block data for the interface in question."
                    ],
                    "params": {
                        "text": {
                            "name": "text",
                            "description": [
                                "The text containing the interface's data."
                            ],
                            "annotation": {
                                "line": "@param string text",
                                "data_type": "string",
                                "name": "text"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getDocBlockDataForConst(text: string): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.getDocBlockDataForConst"
                },
                "getDocBlockDataForEnum": {
                    "access_modifier": "protected",
                    "name": "getDocBlockDataForEnum",
                    "description": [
                        "Get the doc block data for the enum in question."
                    ],
                    "params": {
                        "text": {
                            "name": "text",
                            "description": [
                                "The text containing the enum's data."
                            ],
                            "annotation": {
                                "line": "@param string text",
                                "data_type": "string",
                                "name": "text"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getDocBlockDataForEnum(text: string): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.getDocBlockDataForEnum"
                },
                "getDocBlockDataForFunction": {
                    "access_modifier": "protected",
                    "name": "getDocBlockDataForFunction",
                    "description": [
                        "Get the doc block data for the function in question."
                    ],
                    "params": {
                        "text": {
                            "name": "text",
                            "description": [
                                "The text containing the functions's data."
                            ],
                            "annotation": {
                                "line": "@param string text",
                                "data_type": "string",
                                "name": "text"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getDocBlockDataForFunction(text: string): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.getDocBlockDataForFunction"
                },
                "getDocBlockDataForInterface": {
                    "access_modifier": "protected",
                    "name": "getDocBlockDataForInterface",
                    "description": [
                        "Get the doc block data for the interface in question."
                    ],
                    "params": {
                        "text": {
                            "name": "text",
                            "description": [
                                "The text containing the interface's data."
                            ],
                            "annotation": {
                                "line": "@param string text",
                                "data_type": "string",
                                "name": "text"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getDocBlockDataForInterface(text: string): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.getDocBlockDataForInterface"
                },
                "getDocBlockDataForMethod": {
                    "access_modifier": "protected",
                    "name": "getDocBlockDataForMethod",
                    "description": [
                        "Get the doc block data for the method in question."
                    ],
                    "params": {
                        "text": {
                            "name": "text",
                            "description": [
                                "The text containing the method's data."
                            ],
                            "annotation": {
                                "line": "@param string text",
                                "data_type": "string",
                                "name": "text"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getDocBlockDataForMethod(text: string): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.getDocBlockDataForMethod"
                },
                "getDocBlockDataForProperty": {
                    "access_modifier": "protected",
                    "name": "getDocBlockDataForProperty",
                    "description": [
                        "Get the doc block data for the property in question."
                    ],
                    "params": {
                        "text": {
                            "name": "text",
                            "description": [
                                "The text containing the property's data."
                            ],
                            "annotation": {
                                "line": "@param string text",
                                "data_type": "string",
                                "name": "text"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getDocBlockDataForProperty(text: string): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.getDocBlockDataForProperty"
                },
                "@class` annotation.": {
                    "access_modifier": "protected",
                    "name": "@class` annotation.",
                    "description": [
                        "Get the value of the `@class` annotation."
                    ],
                    "params": {
                        "text": {
                            "name": "text",
                            "description": [
                                "The text in question."
                            ],
                            "annotation": {
                                "line": "@param string text",
                                "data_type": "string",
                                "name": "text"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getMemberName(text: string, textType?: string): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.@class` annotation."
                },
                "getNameOfConst": {
                    "access_modifier": "protected",
                    "name": "getNameOfConst",
                    "description": [
                        "Get the name of the const."
                    ],
                    "params": {
                        "text": {
                            "name": "text",
                            "description": [
                                "The text containing the const's data."
                            ],
                            "annotation": {
                                "line": "@param string text",
                                "data_type": "string",
                                "name": "text"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getNameOfConst(text: string): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.getNameOfConst"
                },
                "getNameOfEnum": {
                    "access_modifier": "protected",
                    "name": "getNameOfEnum",
                    "description": [
                        "Get the name of the enum."
                    ],
                    "params": {
                        "text": {
                            "name": "text",
                            "description": [
                                "The text containing the enum's data."
                            ],
                            "annotation": {
                                "line": "@param string text",
                                "data_type": "string",
                                "name": "text"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getNameOfEnum(text: string): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.getNameOfEnum"
                },
                "getNameOfFunction": {
                    "access_modifier": "protected",
                    "name": "getNameOfFunction",
                    "description": [
                        "Get the name of the function."
                    ],
                    "params": {
                        "text": {
                            "name": "text",
                            "description": [
                                "The text containing the function's data."
                            ],
                            "annotation": {
                                "line": "@param string text",
                                "data_type": "string",
                                "name": "text"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getNameOfFunction(text: string): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.getNameOfFunction"
                },
                "getNameOfProperty": {
                    "access_modifier": "protected",
                    "name": "getNameOfProperty",
                    "description": [
                        "Get the name of the property."
                    ],
                    "params": {
                        "text": {
                            "name": "text",
                            "description": [
                                "The text containing the property's data."
                            ],
                            "annotation": {
                                "line": "@param string text",
                                "data_type": "string",
                                "name": "text"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getNameOfProperty(text: string): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.getNameOfProperty"
                },
                "getSignatureOfFunction": {
                    "access_modifier": "protected",
                    "name": "getSignatureOfFunction",
                    "description": [
                        "Get the signature of the function in question."
                    ],
                    "params": {
                        "text": {
                            "name": "text",
                            "description": [
                                "The text containing the function's data."
                            ],
                            "annotation": {
                                "line": "@param string text",
                                "data_type": "string",
                                "name": "text"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getSignatureOfFunction(text: string): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.getSignatureOfFunction"
                },
                "getSignatureOfInterface": {
                    "access_modifier": "protected",
                    "name": "getSignatureOfInterface",
                    "description": [
                        "Get the signature of the interface in question."
                    ],
                    "params": {
                        "text": {
                            "name": "text",
                            "description": [
                                "The text containing the interface's data."
                            ],
                            "annotation": {
                                "line": "@param string text",
                                "data_type": "string",
                                "name": "text"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getSignatureOfInterface(text: string): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.getSignatureOfInterface"
                },
                "getSignatureOfMethod": {
                    "access_modifier": "protected",
                    "name": "getSignatureOfMethod",
                    "description": [
                        "Get the signature of the method in question."
                    ],
                    "params": {
                        "text": {
                            "name": "text",
                            "description": [
                                "The text containing the method's data."
                            ],
                            "annotation": {
                                "line": "@param string text",
                                "data_type": "string",
                                "name": "text"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getSignatureOfMethod(text: string): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.getSignatureOfMethod"
                },
                "getSignatureOfProperty": {
                    "access_modifier": "protected",
                    "name": "getSignatureOfProperty",
                    "description": [
                        "Get the signature of the property in question."
                    ],
                    "params": {
                        "text": {
                            "name": "text",
                            "description": [
                                "The text containing the property's data."
                            ],
                            "annotation": {
                                "line": "@param string text",
                                "data_type": "string",
                                "name": "text"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getSignatureOfProperty(text: string): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.getSignatureOfProperty"
                },
                "isMemberExported": {
                    "access_modifier": "protected",
                    "name": "isMemberExported",
                    "description": null,
                    "params": {
                        "memberType": {
                            "name": "memberType",
                            "description": [
                                "The member's type."
                            ],
                            "annotation": {
                                "line": "@param string memberType",
                                "data_type": "string",
                                "name": "memberType"
                            }
                        },
                        "text": {
                            "name": "text",
                            "description": [
                                "The text containing the `export` keyword if the member is exported."
                            ],
                            "annotation": {
                                "line": "@param string text",
                                "data_type": "string",
                                "name": "text"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "Returns true if the member is exported and false if not."
                            ],
                            "annotation": {
                                "line": "@return boolean",
                                "data_type": "boolean",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected isMemberExported(memberType: string, text: string): boolean",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.isMemberExported"
                },
                "parseMembersOnlyFile": {
                    "access_modifier": "protected",
                    "name": "parseMembersOnlyFile",
                    "description": [
                        "Parse a file that has the `@doc-blocks-to-json members-only`\nannotation."
                    ],
                    "params": {
                        "fileContents": {
                            "name": "fileContents",
                            "description": [],
                            "annotation": {
                                "line": "@param string fileContents",
                                "data_type": "string",
                                "name": "fileContents"
                            }
                        }
                    },
                    "returns": null,
                    "throws": null,
                    "signature": "protected parseMembersOnlyFile(fileContents)",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.parseMembersOnlyFile"
                },
                "parseClassFile": {
                    "access_modifier": "protected",
                    "name": "parseClassFile",
                    "description": [
                        "Parse a file (assuming it's a class file). `this.compile()` defaults to\nusing this method."
                    ],
                    "params": {
                        "fileContents": {
                            "name": "fileContents",
                            "description": [],
                            "annotation": {
                                "line": "@param string fileContents",
                                "data_type": "string",
                                "name": "fileContents"
                            }
                        }
                    },
                    "returns": null,
                    "throws": null,
                    "signature": "protected parseClassFile(fileContents)",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Compilers.DocBlocksToJson.parseClassFile"
                }
            }
        }
    },
    "Drash.Exceptions": {
        "HttpException": {
            "fully_qualified_name": "Drash.Exceptions.HttpException",
            "namespace": "Drash.Exceptions",
            "name": "HttpException",
            "description": [
                "This class gives you a way to throw HTTP errors semantically.",
                "This class extends `Error`."
            ],
            "properties": {
                "code": {
                    "access_modifier": "public",
                    "description": [
                        "A property to hold the HTTP response code associated with this\nexception."
                    ],
                    "annotation": {
                        "line": "@property number code",
                        "data_type": "number",
                        "name": "code"
                    },
                    "signature": "public code: number",
                    "name": "code",
                    "fully_qualified_name": "Drash.Exceptions.HttpException.code"
                }
            },
            "methods": {
                "constructor": {
                    "access_modifier": "public",
                    "name": "constructor",
                    "description": [
                        "Construct an object of this class."
                    ],
                    "params": {
                        "code": {
                            "name": "code",
                            "description": [
                                "The HTTP response code associated with this exception."
                            ],
                            "annotation": {
                                "line": "@param number code",
                                "data_type": "number",
                                "name": "code"
                            }
                        },
                        "message": {
                            "name": "message",
                            "description": [
                                "(optional) The exception message."
                            ],
                            "annotation": {
                                "line": "@param string message",
                                "data_type": "string",
                                "name": "message"
                            }
                        }
                    },
                    "returns": null,
                    "throws": null,
                    "signature": "constructor(code: number, message?: string)",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Exceptions.HttpException()"
                }
            }
        }
    },
    "Drash.Http": {
        "Resource": {
            "fully_qualified_name": "Drash.Http.Resource",
            "namespace": "Drash.Http",
            "name": "Resource",
            "description": [
                "This is the base resource class for all resources. All resource classes\nmust be derived from this class."
            ],
            "properties": {
                "paths": {
                    "access_modifier": "public",
                    "description": [
                        "A property to hold the paths to access this resource.",
                        "All derived resource classes MUST define this property as `static`\n(e.g., `static paths = [\"path\"];`)"
                    ],
                    "annotation": {
                        "line": "@property string[] paths",
                        "data_type": "string[]",
                        "name": "paths"
                    },
                    "signature": "public paths: string[]",
                    "name": "paths",
                    "fully_qualified_name": "Drash.Http.Resource.paths"
                },
                "name": {
                    "access_modifier": "public",
                    "description": [
                        "A property to hold the name of this resource. This property is used by\n`Drash.Http.Server` to help it store resources in its `resources`\nproperty by name."
                    ],
                    "annotation": {
                        "line": "@property string name",
                        "data_type": "string",
                        "name": "name"
                    },
                    "signature": "public name: string",
                    "name": "name",
                    "fully_qualified_name": "Drash.Http.Resource.name"
                },
                "request": {
                    "access_modifier": "protected",
                    "description": [
                        "The request object."
                    ],
                    "annotation": {
                        "line": "@property ServerRequest request",
                        "data_type": "ServerRequest",
                        "name": "request"
                    },
                    "signature": "protected request: ServerRequest",
                    "name": "request",
                    "fully_qualified_name": "Drash.Http.Resource.request"
                },
                "response": {
                    "access_modifier": "protected",
                    "description": [
                        "The response object."
                    ],
                    "annotation": {
                        "line": "@property Drash.Http.Response response",
                        "data_type": "Drash.Http.Response",
                        "name": "response"
                    },
                    "signature": "protected response: Drash.Http.Response",
                    "name": "response",
                    "fully_qualified_name": "Drash.Http.Resource.response"
                },
                "server": {
                    "access_modifier": "protected",
                    "description": [
                        "The server object."
                    ],
                    "annotation": {
                        "line": "@property Drash.Http.Server server",
                        "data_type": "Drash.Http.Server",
                        "name": "server"
                    },
                    "signature": "protected server: Drash.Http.Server",
                    "name": "server",
                    "fully_qualified_name": "Drash.Http.Resource.server"
                }
            },
            "methods": {
                "constructor": {
                    "access_modifier": "public",
                    "name": "constructor",
                    "description": [
                        "Construct an object of this class."
                    ],
                    "params": {
                        "request": {
                            "name": "request",
                            "description": [
                                "The request object."
                            ],
                            "annotation": {
                                "line": "@param ServerRequest request",
                                "data_type": "ServerRequest",
                                "name": "request"
                            }
                        },
                        "response": {
                            "name": "response",
                            "description": [
                                "The response object."
                            ],
                            "annotation": {
                                "line": "@param Drash.Http.Response response",
                                "data_type": "Drash.Http.Response",
                                "name": "response"
                            }
                        },
                        "server": {
                            "name": "server",
                            "description": [
                                "The server object."
                            ],
                            "annotation": {
                                "line": "@param Drash.Http.Server server",
                                "data_type": "Drash.Http.Server",
                                "name": "server"
                            }
                        }
                    },
                    "returns": null,
                    "throws": null,
                    "signature": "constructor(request: ServerRequest, response: Drash.Http.Response, server: Drash.Http.Server)",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Resource()"
                }
            }
        },
        "Response": {
            "fully_qualified_name": "Drash.Http.Response",
            "namespace": "Drash.Http",
            "name": "Response",
            "description": [
                "Response handles sending a response to the client making the request."
            ],
            "properties": {
                "body": {
                    "access_modifier": "public",
                    "description": [
                        "A property to hold the body of this response."
                    ],
                    "annotation": {
                        "line": "@property any body",
                        "data_type": "any",
                        "name": "body"
                    },
                    "signature": "public body: any = {}",
                    "name": "body",
                    "fully_qualified_name": "Drash.Http.Response.body"
                },
                "body_generated": {
                    "access_modifier": "public",
                    "description": [
                        "A property to hold the body of this response as a string. This is\nimplemented to help unit testing efforts."
                    ],
                    "annotation": {
                        "line": "@property string body_generated",
                        "data_type": "string",
                        "name": "body_generated"
                    },
                    "signature": "public body_generated: string = \"\"",
                    "name": "body_generated",
                    "fully_qualified_name": "Drash.Http.Response.body_generated"
                },
                "headers": {
                    "access_modifier": "public",
                    "description": [
                        "A property to hold this response's headers."
                    ],
                    "annotation": {
                        "line": "@property Headers headers",
                        "data_type": "Headers",
                        "name": "headers"
                    },
                    "signature": "public headers: Headers",
                    "name": "headers",
                    "fully_qualified_name": "Drash.Http.Response.headers"
                },
                "request;": {
                    "access_modifier": "public",
                    "description": [
                        "The request object."
                    ],
                    "annotation": {
                        "line": "@property ServerRequest request",
                        "data_type": "ServerRequest",
                        "name": "request"
                    },
                    "signature": "public request",
                    "name": "request;",
                    "fully_qualified_name": "Drash.Http.Response.request;"
                },
                "status_code": {
                    "access_modifier": "public",
                    "description": [
                        "A property to hold this response's status code (e.g., 200 for OK)."
                    ],
                    "annotation": {
                        "line": "@property number status_code",
                        "data_type": "number",
                        "name": "status_code"
                    },
                    "signature": "public status_code: number = Status.OK",
                    "name": "status_code",
                    "fully_qualified_name": "Drash.Http.Response.status_code"
                }
            },
            "methods": {
                "constructor": {
                    "access_modifier": "public",
                    "name": "constructor",
                    "description": [
                        "Construct an object of this class."
                    ],
                    "params": {
                        "request": {
                            "name": "request",
                            "description": [],
                            "annotation": {
                                "line": "@param ServerRequest request",
                                "data_type": "ServerRequest",
                                "name": "request"
                            }
                        }
                    },
                    "returns": null,
                    "throws": null,
                    "signature": "constructor(request: ServerRequest)",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Response()"
                },
                "generateResponse": {
                    "access_modifier": "public",
                    "name": "generateResponse",
                    "description": [
                        "Generate a response."
                    ],
                    "params": null,
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public generateResponse(): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Response.generateResponse"
                },
                "generateHtmlResponse": {
                    "access_modifier": "public",
                    "name": "generateHtmlResponse",
                    "description": [
                        "Generate an HTML response. The `this.body` property should be the\nentire HTML document."
                    ],
                    "params": null,
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public generateHtmlResponse(): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Response.generateHtmlResponse"
                },
                "generateJsonResponse": {
                    "access_modifier": "public",
                    "name": "generateJsonResponse",
                    "description": [
                        "Generate a JSON response."
                    ],
                    "params": null,
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public generateJsonResponse(): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Response.generateJsonResponse"
                },
                "generateXmlResponse": {
                    "access_modifier": "public",
                    "name": "generateXmlResponse",
                    "description": [
                        "Generate an XML response."
                    ],
                    "params": null,
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public generateXmlResponse(): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Response.generateXmlResponse"
                },
                "getStatusMessage": {
                    "access_modifier": "public",
                    "name": "getStatusMessage",
                    "description": [
                        "Get the status message based on the status code."
                    ],
                    "params": null,
                    "returns": [
                        {
                            "description": [
                                "Returns the status message associated with `this.status_code`. For\nexample, if the response's `status_code` is `200`, then this method\nwill return \"OK\" as the status message."
                            ],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public getStatusMessage(): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Response.getStatusMessage"
                },
                "getStatusMessageFull": {
                    "access_modifier": "public",
                    "name": "getStatusMessageFull",
                    "description": [
                        "Get the full status message based on the status code. This is just the\nstatus code and the status message together (e.g., `200 (OK)`, `401\n(Unauthorized)`, etc.)."
                    ],
                    "params": null,
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public getStatusMessageFull(): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Response.getStatusMessageFull"
                },
                "outputDetails": {
                    "access_modifier": "public",
                    "name": "outputDetails",
                    "description": [
                        "Get the full output details (for debugging purposes)."
                    ],
                    "params": null,
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public outputDetails(): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Response.outputDetails"
                },
                "send": {
                    "access_modifier": "public",
                    "name": "send",
                    "description": [
                        "Send the response to the client making the request."
                    ],
                    "params": null,
                    "returns": [
                        {
                            "description": [
                                "Returns the output which is passed to `ServerRequest.respond()`.\nThe output is only returned for unit testing purposes. It is not\nintended to be used elsewhere as this call is the last call in the\nrequest-resource-response lifecycle."
                            ],
                            "annotation": {
                                "line": "@return Promise<any>",
                                "data_type": "Promise<any>",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public async send(): Promise<any>",
                    "is_async": true,
                    "fully_qualified_name": "Drash.Http.Response.send"
                },
                "sendStatic": {
                    "access_modifier": "public",
                    "name": "sendStatic",
                    "description": [
                        "Send the response of a static asset (e.g., a CSS file, JS file, PDF\nfile, etc.) to the client making the request.",
                        "This method is reliant on the `DRASH_SERVER_DIRECTORY` environment\nvariable. The `DRASH_SERVER_DIRECTORY` environment variable MUST point\nto the parent directory of the directory (or list of directories)\ncontaining static assets. For example, if my project is located at\n`/path/to/my/project` and my CSS files are located at\n`/path/to/my/project/public/assets`, then `DRASH_SERVER_DIRECTORY`\nshould be `/path/to/my/project/public`."
                    ],
                    "params": null,
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public sendStatic(): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Response.sendStatic"
                },
                "getHeaderContentType": {
                    "access_modifier": "protected",
                    "name": "getHeaderContentType",
                    "description": [
                        "Get this response's `Content-Type` header. There are three ways to set\nthe response's `Content-Type` header from a request: (1) the request's\nheaders by setting `Response-Content-Type: \"type\"`, (2) the request's\nURL query params by setting `?response_content_type=type`, and the\nrequest's body by setting `{response_content_type: \"type\"}`.",
                        "Setting the content type using the request's body takes precedence over\nall other settings.",
                        "Setting the content type using the request's URL query params takes\nprecedence over the header setting and the default setting.",
                        "Setting the content type using the request's header setting takes\nprecedence over the default setting.",
                        "If no content type is specified by the request's body, URL query\nparams, or header, then the default content type will be used. The\ndefault content type is the content type defined in the\n`Drash.Http.Server` object's `response_output` config."
                    ],
                    "params": null,
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getHeaderContentType(): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Response.getHeaderContentType"
                }
            }
        },
        "Server": {
            "fully_qualified_name": "Drash.Http.Server",
            "namespace": "Drash.Http",
            "name": "Server",
            "description": [
                "Server handles the entire request-resource-response lifecycle. It is in\ncharge of handling HTTP requests to resources, static paths, sending\nappropriate responses, and handling any errors that bubble up within the\nrequest-resource-response lifecycle."
            ],
            "properties": {
                "logger": {
                    "access_modifier": "public",
                    "description": [
                        "A property to hold this server's logger."
                    ],
                    "annotation": {
                        "line": "@property Drash.Loggers.ConsoleLogger|Drash.Loggers.FileLogger logger",
                        "data_type": "Drash.Loggers.ConsoleLogger|Drash.Loggers.FileLogger",
                        "name": "logger"
                    },
                    "signature": "public logger: Drash.Loggers.ConsoleLogger | Drash.Loggers.FileLogger",
                    "name": "logger",
                    "fully_qualified_name": "Drash.Http.Server.logger"
                },
                "configs": {
                    "access_modifier": "protected",
                    "description": [
                        "A property to hold this server's configs."
                    ],
                    "annotation": {
                        "line": "@property any configs",
                        "data_type": "any",
                        "name": "configs"
                    },
                    "signature": "protected configs: any",
                    "name": "configs",
                    "fully_qualified_name": "Drash.Http.Server.configs"
                },
                "deno_server": {
                    "access_modifier": "protected",
                    "description": [
                        "A property to hold the Deno server. This property is set in\n`this.run()` like so: ` this.deno_server =\nserve(this.configs.address);`. `serve()` is imported from\n[https://deno.land/x/http/server.ts](https://deno.land/x/http/server.ts)."
                    ],
                    "annotation": {
                        "line": "@property any deno_server",
                        "data_type": "any",
                        "name": "deno_server"
                    },
                    "signature": "protected deno_server: any",
                    "name": "deno_server",
                    "fully_qualified_name": "Drash.Http.Server.deno_server"
                },
                "resources": {
                    "access_modifier": "protected",
                    "description": [
                        "A property to hold the resources passed in from the configs."
                    ],
                    "annotation": {
                        "line": "@property any[] resources",
                        "data_type": "any[]",
                        "name": "resources"
                    },
                    "signature": "protected resources: any[] = []",
                    "name": "resources",
                    "fully_qualified_name": "Drash.Http.Server.resources"
                },
                "static_paths": {
                    "access_modifier": "protected",
                    "description": [
                        "This server's list of static paths. HTTP requests to a static path are\nusually intended to retrieve some type of concrete resource (e.g., a\nCSS file or a JS file). If an HTTP request is matched to a static path\nand the resource the HTTP request is trying to get is found, then\n`Drash.Http.Response` will use its `sendStatic()` method to send the\nstatic asset back to the client."
                    ],
                    "annotation": {
                        "line": "@property string[] static_paths",
                        "data_type": "string[]",
                        "name": "static_paths"
                    },
                    "signature": "protected static_paths: string[] = []",
                    "name": "static_paths",
                    "fully_qualified_name": "Drash.Http.Server.static_paths"
                }
            },
            "methods": {
                "constructor": {
                    "access_modifier": "public",
                    "name": "constructor",
                    "description": [
                        "Construct an object of this class."
                    ],
                    "params": {
                        "configs": {
                            "name": "configs",
                            "description": [
                                "address: string",
                                "logger: Drash.Http.ConsoleLogger|Drash.Http.FileLogger",
                                "response_output: string (a proper MIME type)",
                                "resources: Drash.Http.Resource[]",
                                "static_paths: string[]"
                            ],
                            "annotation": {
                                "line": "@param any configs",
                                "data_type": "any",
                                "name": "configs"
                            }
                        }
                    },
                    "returns": null,
                    "throws": null,
                    "signature": "constructor(configs: any)",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Server()"
                },
                "handleHttpRequest": {
                    "access_modifier": "public",
                    "name": "handleHttpRequest",
                    "description": [
                        "Handle an HTTP request from the Deno server."
                    ],
                    "params": {
                        "request": {
                            "name": "request",
                            "description": [
                                "The request object."
                            ],
                            "annotation": {
                                "line": "@param ServerRequest request",
                                "data_type": "ServerRequest",
                                "name": "request"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "See `Drash.Http.Response.send()`."
                            ],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public handleHttpRequest(request): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Server.handleHttpRequest"
                },
                "handleHttpRequestError": {
                    "access_modifier": "public",
                    "name": "handleHttpRequestError",
                    "description": [
                        "Handle cases when an error is thrown when handling an HTTP request."
                    ],
                    "params": {
                        "request": {
                            "name": "request",
                            "description": [
                                "The request object."
                            ],
                            "annotation": {
                                "line": "@param ServerRequest request",
                                "data_type": "ServerRequest",
                                "name": "request"
                            }
                        },
                        "error": {
                            "name": "error",
                            "description": [
                                "The error object."
                            ],
                            "annotation": {
                                "line": "@param any error",
                                "data_type": "any",
                                "name": "error"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "See `Drash.Http.Response.send()`."
                            ],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public handleHttpRequestError(request, error: any): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Server.handleHttpRequestError"
                },
                "handleHttpRequestForFavicon": {
                    "access_modifier": "public",
                    "name": "handleHttpRequestForFavicon",
                    "description": [
                        "Handle HTTP requests for the favicon. This method only exists to\nshort-circuit favicon requests--preventing the requests from clogging\nthe logs."
                    ],
                    "params": {
                        "request": {
                            "name": "request",
                            "description": [],
                            "annotation": {
                                "line": "@param ServerRequest request",
                                "data_type": "ServerRequest",
                                "name": "request"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "Returns the response as stringified JSON. This is only used for unit\ntesting purposes."
                            ],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public handleHttpRequestForFavicon(request): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Server.handleHttpRequestForFavicon"
                },
                "handleHttpRequestForStaticPathAsset": {
                    "access_modifier": "public",
                    "name": "handleHttpRequestForStaticPathAsset",
                    "description": [
                        "Handle HTTP requests for static path assets."
                    ],
                    "params": {
                        "request": {
                            "name": "request",
                            "description": [],
                            "annotation": {
                                "line": "@param ServerRequest request",
                                "data_type": "ServerRequest",
                                "name": "request"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "Returns the response as stringified JSON. This is only used for unit\ntesting purposes."
                            ],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public handleHttpRequestForStaticPathAsset(request): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Server.handleHttpRequestForStaticPathAsset"
                },
                "run": {
                    "access_modifier": "public",
                    "name": "run",
                    "description": [
                        "Run the Deno server at the address specified in the configs. This\nmethod takes each HTTP request and creates a new and more workable\nrequest object and passes it to\n`Drash.Http.Server.handleHttpRequest()`."
                    ],
                    "params": null,
                    "returns": [
                        {
                            "description": [
                                "This method just listens for requests at the address you provide in the\nconfigs."
                            ],
                            "annotation": {
                                "line": "@return Promise<void>",
                                "data_type": "Promise<void>",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public async run(): Promise<void>",
                    "is_async": true,
                    "fully_qualified_name": "Drash.Http.Server.run"
                },
                "addHttpResource": {
                    "access_modifier": "protected",
                    "name": "addHttpResource",
                    "description": [
                        "Add an HTTP resource to the server which can be retrieved at specific\nURIs.",
                        "Drash defines an HTTP resource according to the MDN Web docs\n[here](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Identifying_resources_on_the_Web)."
                    ],
                    "params": {
                        "resourceClass": {
                            "name": "resourceClass",
                            "description": [
                                "A child object of the `Drash.Http.Resource` class."
                            ],
                            "annotation": {
                                "line": "@param Drash.Http.Resource resourceClass",
                                "data_type": "Drash.Http.Resource",
                                "name": "resourceClass"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "This method just adds `resourceClass` to `this.resources` so it can be\nused (if matched) during an HTTP request."
                            ],
                            "annotation": {
                                "line": "@return void",
                                "data_type": "void",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected addHttpResource(resourceClass: Drash.Http.Resource): void",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Server.addHttpResource"
                },
                "addStaticPath": {
                    "access_modifier": "protected",
                    "name": "addStaticPath",
                    "description": [
                        "Add a static path for serving static assets like CSS files, JS files,\nPDF files, etc."
                    ],
                    "params": {
                        "path": {
                            "name": "path",
                            "description": [],
                            "annotation": {
                                "line": "@param string path",
                                "data_type": "string",
                                "name": "path"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "This method just adds `path` to `this.static_paths` so it can be used (if\nmatched) during an HTTP request."
                            ],
                            "annotation": {
                                "line": "@return void",
                                "data_type": "void",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected addStaticPath(path: string): void",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Server.addStaticPath"
                },
                "errorResponse": {
                    "access_modifier": "protected",
                    "name": "errorResponse",
                    "description": null,
                    "params": {
                        "code": {
                            "name": "code",
                            "description": [],
                            "annotation": {
                                "line": "@param number code",
                                "data_type": "number",
                                "name": "code"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return Drash.Exceptions.HttpException",
                                "data_type": "Drash.Exceptions.HttpException",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected errorResponse(code: number): Drash.Exceptions.HttpException",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Server.errorResponse"
                },
                "getResourceClass": {
                    "access_modifier": "protected",
                    "name": "getResourceClass",
                    "description": [
                        "Get the resource class."
                    ],
                    "params": {
                        "request": {
                            "name": "request",
                            "description": [
                                "The request object."
                            ],
                            "annotation": {
                                "line": "@param ServerRequest request",
                                "data_type": "ServerRequest",
                                "name": "request"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "Returns a `Drash.Http.Resource` object if the URL path of the request\ncan be matched to a `Drash.Http.Resource` object's paths.",
                                "Returns `undefined` if a `Drash.Http.Resource` object can't be matched."
                            ],
                            "annotation": {
                                "line": "@return Drash.Http.Resource|undefined",
                                "data_type": "Drash.Http.Resource|undefined",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getResourceClass(request): Drash.Http.Resource | undefined",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Server.getResourceClass"
                },
                "requestTargetsStaticPath": {
                    "access_modifier": "protected",
                    "name": "requestTargetsStaticPath",
                    "description": [
                        "Is the request targeting a static path?"
                    ],
                    "params": {
                        "request": {
                            "name": "request",
                            "description": [],
                            "annotation": {
                                "line": "@param ServerRequest request",
                                "data_type": "ServerRequest",
                                "name": "request"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "Returns true if the request targets a static path."
                            ],
                            "annotation": {
                                "line": "@return boolean",
                                "data_type": "boolean",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected requestTargetsStaticPath(request): boolean",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Http.Server.requestTargetsStaticPath"
                }
            }
        }
    },
    "Drash.Loggers": {
        "Logger": {
            "fully_qualified_name": "Drash.Loggers.Logger",
            "namespace": "Drash.Loggers",
            "name": "Logger",
            "description": [
                "This logger is the base logger class for all logger classes."
            ],
            "properties": {
                "configs": {
                    "access_modifier": "protected",
                    "description": [
                        "This logger's configs.\n```javascript\n{\n//\n// enabled: boolean\n//\n//     OPTIONS/VALUE\n//         true, false\n//\n//     DEFAULT VALUE\n//         false\n//\n//     DESCRIPTION\n//         Is the logger enabled?\n//\nenabled: true,\n//\n// level: string\n//\n//     OPTIONS/VALUE\n//         all, trace, debug, info, warn, error, fatal, off\n//\n//     DEFAULT VALUE\n//         debug\n//\n//     DESCRIPTION\n//         Control the number of messages logged by the logger.\n//\nlevel: \"debug\",\n//\n// tag_string: string\n//\n//    OPTIONS/VALUE\n//         This only takes a string with tags formatted as {tag}. Example:\n//\n//             {this_tag} | {that_tag} | {another_tag}\n//             {this_tag} * {that_tag} * {another_tag}\n//             [{this_tag}] [{that_tag}] [{another_tag}]\n//\n//     DEFAULT VALUE\n//         None.\n//\n//     DESCRIPTION\n//         This tag string will be parsed by the logger object and tags will\n//         be replaced based on the `tag_string_fns` config.\n//\ntag_string: \"\",\n//\n// tag_string_fns: any\n//\n//     OPTIONS/VALUE\n//         This takes an object of key-value pairs where the key is the name\n//         of a tag defined in the `tag_string` config.\n//\n//     DEFAULT VALUE\n//         None.\n//\n//     DESCRIPTION\n//         This object is used to replace tags in the `tag_string` config by\n//         matching keys to tags and replacing tags with the values of the\n//         keys. For example, if the `tag_string` and `tag_string_fns` configs\n//         were ...\n//\n//             {\n//               enabled: true,\n//               level: \"debug\",\n//               tag_string: \"[ - {datetime} - ] {your_tag} === {level} ===\"\n//               tag_string_fns: {\n//                 datetime: function datetime() {\n//                   let dateTime = new Date();\n//                   dateTime.setUTCHours(dateTime.getUTCHours() - 5);\n//                   return dateTime.toISOString().replace(\"T\", \" \");\n//                 },\n//                 your_tag: \"This-Is-Your-Tag\"\n//               }\n//             }\n//\n//         ... then the tags string would output something like ...\n//\n//             [ - 2018-08-26 00:10:02.590Z - ] This-Is-Your-Tag === DEBUG === {log message would be appended here}\n//\n//         The {level} tag is reserved and cannot be defined. It is replaced\n//         with the level of the current log message being written. For\n//         example, if `MyLogger.info(\"some message\")` is called, then the\n//         {level} tag will be replaced with INFO.\n//\ntag_string_fns: {},\n}\n```"
                    ],
                    "annotation": {
                        "line": "@property any configs",
                        "data_type": "any",
                        "name": "configs"
                    },
                    "signature": "protected configs: any",
                    "name": "configs",
                    "fully_qualified_name": "Drash.Loggers.Logger.configs"
                },
                "current_log_message_level_name": {
                    "access_modifier": "protected",
                    "description": [
                        "The level of the log message currently being written."
                    ],
                    "annotation": {
                        "line": "@property string current_log_message_level_name",
                        "data_type": "string",
                        "name": "current_log_message_level_name"
                    },
                    "signature": "protected current_log_message_level_name: string",
                    "name": "current_log_message_level_name",
                    "fully_qualified_name": "Drash.Loggers.Logger.current_log_message_level_name"
                }
            },
            "methods": {
                "constructor": {
                    "access_modifier": "public",
                    "name": "constructor",
                    "description": [
                        "Construct an object of this class."
                    ],
                    "params": {
                        "configs": {
                            "name": "configs",
                            "description": [
                                "See [Drash.Loggers.Logger.configs](/#/api-reference/loggers/logger#configs)."
                            ],
                            "annotation": {
                                "line": "@param any configs",
                                "data_type": "any",
                                "name": "configs"
                            }
                        }
                    },
                    "returns": null,
                    "throws": null,
                    "signature": "constructor(configs: any)",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Loggers.Logger()"
                },
                "debug": {
                    "access_modifier": "public",
                    "name": "debug",
                    "description": [
                        "Output a DEBUG level log message."
                    ],
                    "params": {
                        "message": {
                            "name": "message",
                            "description": [
                                "The log message."
                            ],
                            "annotation": {
                                "line": "@param string message",
                                "data_type": "string",
                                "name": "message"
                            }
                        }
                    },
                    "returns": null,
                    "throws": null,
                    "signature": "public debug(message)",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Loggers.Logger.debug"
                },
                "error": {
                    "access_modifier": "public",
                    "name": "error",
                    "description": [
                        "Output an ERROR level log message."
                    ],
                    "params": {
                        "message": {
                            "name": "message",
                            "description": [
                                "The log message."
                            ],
                            "annotation": {
                                "line": "@param string message",
                                "data_type": "string",
                                "name": "message"
                            }
                        }
                    },
                    "returns": null,
                    "throws": null,
                    "signature": "public error(message)",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Loggers.Logger.error"
                },
                "fatal": {
                    "access_modifier": "public",
                    "name": "fatal",
                    "description": [
                        "Output a FATAL level log message."
                    ],
                    "params": {
                        "message": {
                            "name": "message",
                            "description": [
                                "The log message."
                            ],
                            "annotation": {
                                "line": "@param string message",
                                "data_type": "string",
                                "name": "message"
                            }
                        }
                    },
                    "returns": null,
                    "throws": null,
                    "signature": "public fatal(message)",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Loggers.Logger.fatal"
                },
                "info": {
                    "access_modifier": "public",
                    "name": "info",
                    "description": [
                        "Output an INFO level log message."
                    ],
                    "params": {
                        "message": {
                            "name": "message",
                            "description": [
                                "The log message."
                            ],
                            "annotation": {
                                "line": "@param string message",
                                "data_type": "string",
                                "name": "message"
                            }
                        }
                    },
                    "returns": null,
                    "throws": null,
                    "signature": "public info(message)",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Loggers.Logger.info"
                },
                "trace": {
                    "access_modifier": "public",
                    "name": "trace",
                    "description": [
                        "Output a TRACE level log message."
                    ],
                    "params": {
                        "message": {
                            "name": "message",
                            "description": [
                                "The log message."
                            ],
                            "annotation": {
                                "line": "@param string message",
                                "data_type": "string",
                                "name": "message"
                            }
                        }
                    },
                    "returns": null,
                    "throws": null,
                    "signature": "public trace(message)",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Loggers.Logger.trace"
                },
                "warn": {
                    "access_modifier": "public",
                    "name": "warn",
                    "description": [
                        "Output a WARN level log message."
                    ],
                    "params": {
                        "message": {
                            "name": "message",
                            "description": [
                                "The log message."
                            ],
                            "annotation": {
                                "line": "@param string message",
                                "data_type": "string",
                                "name": "message"
                            }
                        }
                    },
                    "returns": null,
                    "throws": null,
                    "signature": "public warn(message)",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Loggers.Logger.warn"
                },
                "getTagStringParsed": {
                    "access_modifier": "protected",
                    "name": "getTagStringParsed",
                    "description": [
                        "Get the parsed version of the raw tag string."
                    ],
                    "params": null,
                    "returns": [
                        {
                            "description": [],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected getTagStringParsed(): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Loggers.Logger.getTagStringParsed"
                },
                "sendToWriteMethod": {
                    "access_modifier": "protected",
                    "name": "sendToWriteMethod",
                    "description": [
                        "Send the message to the write method (which should be in the child\nclass).  Also, do some prechecks before sending to see if the log\nmessage should be written."
                    ],
                    "params": {
                        "logMethodLevelDefinition": {
                            "name": "logMethodLevelDefinition",
                            "description": [
                                "The dictionary definition of the log message's level."
                            ],
                            "annotation": {
                                "line": "@param any logMethodLevelDefinition",
                                "data_type": "any",
                                "name": "logMethodLevelDefinition"
                            }
                        },
                        "message": {
                            "name": "message",
                            "description": [
                                "The log message."
                            ],
                            "annotation": {
                                "line": "@param string message",
                                "data_type": "string",
                                "name": "message"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "Returns the log message which is used for unit testing purposes."
                            ],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "protected sendToWriteMethod(logMethodLevelDefinition, message): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Loggers.Logger.sendToWriteMethod"
                }
            }
        },
        "ConsoleLogger": {
            "fully_qualified_name": "Drash.Loggers.ConsoleLogger",
            "namespace": "Drash.Loggers",
            "name": "ConsoleLogger",
            "description": [
                "This logger allows you to log messages to the console."
            ],
            "properties": {},
            "methods": {
                "constructor": {
                    "access_modifier": "public",
                    "name": "constructor",
                    "description": [
                        "Construct an object of this class."
                    ],
                    "params": {
                        "configs": {
                            "name": "configs",
                            "description": [
                                "See `Drash.Loggers.Logger.configs`."
                            ],
                            "annotation": {
                                "line": "@param any configs",
                                "data_type": "any",
                                "name": "configs"
                            }
                        }
                    },
                    "returns": null,
                    "throws": null,
                    "signature": "constructor(configs)",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Loggers.ConsoleLogger()"
                },
                "write": {
                    "access_modifier": "public",
                    "name": "write",
                    "description": [
                        "Write a log message to the console.",
                        "This method is not intended to be called directly. It is already used\nin the base class (`Logger`) and automatically called."
                    ],
                    "params": {
                        "logMethodLevelDefinition": {
                            "name": "logMethodLevelDefinition",
                            "description": [],
                            "annotation": {
                                "line": "@param any logMethodLevelDefinition",
                                "data_type": "any",
                                "name": "logMethodLevelDefinition"
                            }
                        },
                        "message": {
                            "name": "message",
                            "description": [],
                            "annotation": {
                                "line": "@param string message",
                                "data_type": "string",
                                "name": "message"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "Returns the log message which is used for unit testing purposes."
                            ],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public write(logMethodLevelDefinition, message): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Loggers.ConsoleLogger.write"
                }
            }
        },
        "FileLogger": {
            "fully_qualified_name": "Drash.Loggers.FileLogger",
            "namespace": "Drash.Loggers",
            "name": "FileLogger",
            "description": [
                "This logger allows you to log messages to a file."
            ],
            "properties": {
                "file": {
                    "access_modifier": "protected",
                    "description": [
                        "The file this logger will write log messages to."
                    ],
                    "annotation": {
                        "line": "@property string file",
                        "data_type": "string",
                        "name": "file"
                    },
                    "signature": "protected file: string",
                    "name": "file",
                    "fully_qualified_name": "Drash.Loggers.FileLogger.file"
                }
            },
            "methods": {
                "constructor": {
                    "access_modifier": "public",
                    "name": "constructor",
                    "description": [
                        "Construct an object of this class."
                    ],
                    "params": {
                        "configs": {
                            "name": "configs",
                            "description": [
                                "See `Drash.Loggers.Logger.configs`."
                            ],
                            "annotation": {
                                "line": "@param any configs",
                                "data_type": "any",
                                "name": "configs"
                            }
                        }
                    },
                    "returns": null,
                    "throws": null,
                    "signature": "constructor(configs)",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Loggers.FileLogger()"
                },
                "write": {
                    "access_modifier": "public",
                    "name": "write",
                    "description": [
                        "Write a log message to `this.file`.",
                        "This method is not intended to be called directly. It is already used\nin the base class (`Logger`) and automatically called."
                    ],
                    "params": {
                        "logMethodLevelDefinition": {
                            "name": "logMethodLevelDefinition",
                            "description": [],
                            "annotation": {
                                "line": "@param any logMethodLevelDefinition",
                                "data_type": "any",
                                "name": "logMethodLevelDefinition"
                            }
                        },
                        "message": {
                            "name": "message",
                            "description": [],
                            "annotation": {
                                "line": "@param string message",
                                "data_type": "string",
                                "name": "message"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "Returns the log message which is used for unit testing purposes."
                            ],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public write(logMethodLevelDefinition, message): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Loggers.FileLogger.write"
                }
            }
        }
    },
    "Drash.Services": {
        "HttpService": {
            "fully_qualified_name": "Drash.Services.HttpService",
            "namespace": "Drash.Services",
            "name": "HttpService",
            "description": [
                "This class helps perform HTTP-related processes."
            ],
            "properties": {},
            "methods": {
                "getHttpRequestBodyParsed": {
                    "access_modifier": "public",
                    "name": "getHttpRequestBodyParsed",
                    "description": [
                        "Parse the body of the request so that it can be used as an associative\narray.",
                        "If the request body's content type is `application/json`, then\n`{\"username\":\"root\",\"password\":\"alpine\"}` becomes `{ username: \"root\", password: \"alpine\" }`.",
                        "If the request body's content type is\n`application/x-www-form-urlencoded`, then\n`username=root&password=alpine` becomes `{ username: \"root\", password: \"alpine\" }`.",
                        "If the body can't be parsed, then this method will set\n`this.body_parsed` to `false` to denote that the request body was not\nparsed."
                    ],
                    "params": null,
                    "returns": [
                        {
                            "description": [
                                "This method resolves `this.body_parsed`, but only for testing purposes.\nThis method can be called without assigning its resolved data to a\nvariable. For example, you can call `await request.parseBody();` and\naccess `request.body_parsed` immediately after. Before this method\nresolves `this.body_parsed`, it assigns the parsed request body to\n`this.body_parsed`."
                            ],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public getHttpRequestBodyParsed(request): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Services.HttpService.getHttpRequestBodyParsed"
                },
                "hydrateHttpRequest": {
                    "access_modifier": "public",
                    "name": "hydrateHttpRequest",
                    "description": [
                        "Hydrate the request with data that is useful for the\n`Drash.Http.Server` class."
                    ],
                    "params": {
                        "request": {
                            "name": "request",
                            "description": [
                                "The request object."
                            ],
                            "annotation": {
                                "line": "@param ServerRequest request",
                                "data_type": "ServerRequest",
                                "name": "request"
                            }
                        },
                        "options": {
                            "name": "options",
                            "description": [
                                "A list of options."
                            ],
                            "annotation": {
                                "line": "@param any options",
                                "data_type": "any",
                                "name": "options"
                            }
                        }
                    },
                    "returns": null,
                    "throws": null,
                    "signature": "public hydrateHttpRequest(request, options?: any)",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Services.HttpService.hydrateHttpRequest"
                },
                "getHttpRequestUrlPath": {
                    "access_modifier": "public",
                    "name": "getHttpRequestUrlPath",
                    "description": [
                        "Get the specified HTTP request's URL path."
                    ],
                    "params": {
                        "request": {
                            "name": "request",
                            "description": [
                                "The request object."
                            ],
                            "annotation": {
                                "line": "@param ServerRequest request",
                                "data_type": "ServerRequest",
                                "name": "request"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "Returns the URL path."
                            ],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public getHttpRequestUrlPath(request): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Services.HttpService.getHttpRequestUrlPath"
                },
                "getHttpRequestUrlQueryString": {
                    "access_modifier": "public",
                    "name": "getHttpRequestUrlQueryString",
                    "description": [
                        "Get the specified HTTP request's URL query string."
                    ],
                    "params": {
                        "request": {
                            "name": "request",
                            "description": [
                                "The request object."
                            ],
                            "annotation": {
                                "line": "@param ServerRequest request",
                                "data_type": "ServerRequest",
                                "name": "request"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "Returns the URL query string (e.g., key1=value1&key2=value2) without\nthe leading \"?\" character."
                            ],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public getHttpRequestUrlQueryString(request): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Services.HttpService.getHttpRequestUrlQueryString"
                },
                "getHttpRequestUrlQueryParams": {
                    "access_modifier": "public",
                    "name": "getHttpRequestUrlQueryParams",
                    "description": [
                        "Get the HTTP request's URL query params by parsing the URL query string."
                    ],
                    "params": {
                        "request": {
                            "name": "request",
                            "description": [
                                "The request object."
                            ],
                            "annotation": {
                                "line": "@param ServerRequest request",
                                "data_type": "ServerRequest",
                                "name": "request"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "Returns the URL query string in key-value pair format."
                            ],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public getHttpRequestUrlQueryParams(request): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Services.HttpService.getHttpRequestUrlQueryParams"
                },
                "getMimeType": {
                    "access_modifier": "public",
                    "name": "getMimeType",
                    "description": [
                        "Get a MIME type for a file based on its extension."
                    ],
                    "params": {
                        "filePath": {
                            "name": "filePath",
                            "description": [
                                "The file path in question."
                            ],
                            "annotation": {
                                "line": "@param string filePath",
                                "data_type": "string",
                                "name": "filePath"
                            }
                        },
                        "fileIsUrl": {
                            "name": "fileIsUrl",
                            "description": [
                                "(optional) Is the file path  a URL to a file? Defaults to false.",
                                "If the file path is a URL, then this method will make sure the URL\nquery string is not included while doing a lookup of the file's\nextension."
                            ],
                            "annotation": {
                                "line": "@param boolean fileIsUrl",
                                "data_type": "boolean",
                                "name": "fileIsUrl"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "Returns the name of the MIME type based on the extension of the\nfile path ."
                            ],
                            "annotation": {
                                "line": "@return string",
                                "data_type": "string",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public getMimeType(filePath: string, fileIsUrl: boolean = false): string",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Services.HttpService.getMimeType"
                },
                "parseQueryParamsString": {
                    "access_modifier": "public",
                    "name": "parseQueryParamsString",
                    "description": [
                        "Parse a URL query string in it's raw form.",
                        "If the request body's content type is application/json, then\n`{\"username\":\"root\",\"password\":\"alpine\"}` becomes\n`{ username: \"root\", password: \"alpine\" }`.",
                        "If the request body's content type is\napplication/x-www-form-urlencoded, then `username=root&password=alpine`\nbecomes `{ username: \"root\", password: \"alpine\" }`."
                    ],
                    "params": {
                        "queryParamsString": {
                            "name": "queryParamsString",
                            "description": [
                                "The query params string (e.g., hello=world&ok=then&git=hub)"
                            ],
                            "annotation": {
                                "line": "@param string queryParamsString",
                                "data_type": "string",
                                "name": "queryParamsString"
                            }
                        }
                    },
                    "returns": null,
                    "throws": null,
                    "signature": "public parseQueryParamsString(queryParamsString: string): any",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Services.HttpService.parseQueryParamsString"
                }
            }
        }
    },
    "Drash.Util": {
        "ObjectParser": {
            "fully_qualified_name": "Drash.Util.ObjectParser",
            "namespace": "Drash.Util",
            "name": "ObjectParser",
            "description": [
                "A util class to help parse objects."
            ],
            "properties": {},
            "methods": {
                "getNestedPropertyValue": {
                    "access_modifier": "public",
                    "name": "getNestedPropertyValue",
                    "description": [
                        "Get the value of a deeply nested property."
                    ],
                    "params": {
                        "inputObject": {
                            "name": "inputObject",
                            "description": [
                                "The object containing the deeply nested property."
                            ],
                            "annotation": {
                                "line": "@param any inputObject",
                                "data_type": "any",
                                "name": "inputObject"
                            }
                        },
                        "properties": {
                            "name": "properties",
                            "description": [
                                "The rest of the arguments as strings to use as property names when\nfinding the nested property's value. The last argument that the \"rest\nparameter\" finds is the nested property you are targeting."
                            ],
                            "annotation": {
                                "line": "@param ...string properties",
                                "data_type": "...string",
                                "name": "properties"
                            }
                        }
                    },
                    "returns": [
                        {
                            "description": [
                                "Returns the value of the targeted property."
                            ],
                            "annotation": {
                                "line": "@return any",
                                "data_type": "any",
                                "name": null
                            }
                        }
                    ],
                    "throws": null,
                    "signature": "public getNestedPropertyValue(inputObject: any, ...properties)",
                    "is_async": false,
                    "fully_qualified_name": "Drash.Util.ObjectParser.getNestedPropertyValue"
                }
            }
        }
    },
    "Drash.Util.Exports": {
        "ColorizeOptions": {
            "exported": true,
            "name": "ColorizeOptions",
            "description": [
                "An interface to hold the `colorize()` function's options."
            ],
            "signature": "export interface ColorizeOptions {\n  color?: string;\n  background?: string;\n  style?: string;\n}",
            "is_interface": true,
            "fully_qualified_name": "Drash.Util.Exports.ColorizeOptions"
        },
        "colorize": {
            "exported": true,
            "name": "colorize",
            "description": [
                "A util function that helps colorize text in the console."
            ],
            "params": {
                "message": {
                    "name": "message",
                    "description": [
                        "The text to colorize."
                    ],
                    "annotation": {
                        "line": "@param string message",
                        "data_type": "string",
                        "name": "message"
                    }
                },
                "options": {
                    "name": "options",
                    "description": [
                        "See `Drash.Utils.Exports.ColorizeOptions` interface."
                    ],
                    "annotation": {
                        "line": "@param ColorizeOptions options",
                        "data_type": "ColorizeOptions",
                        "name": "options"
                    }
                }
            },
            "returns": [
                {
                    "description": [
                        "Returns the colorized message."
                    ],
                    "annotation": {
                        "line": "@return string",
                        "data_type": "string",
                        "name": null
                    }
                }
            ],
            "throws": null,
            "signature": "export function colorize(message: string, options: ColorizeOptions): string",
            "is_function": true,
            "fully_qualified_name": "Drash.Util.Exports.colorize"
        },
        "getFileSystemStructure": {
            "exported": true,
            "name": "getFileSystemStructure",
            "description": [
                "Get the filesystem structure of the directory (recursively)."
            ],
            "params": null,
            "returns": [
                {
                    "description": [
                        "Returns the following object:\n{\nbasename: \"filename\",\nextension: extension, // does not account for .min.extension or similar extensions\nfilename: filename.extension,\npath: \"/path/to/the/file/dir/filename.extension\",\npathname: \"/path/to/the/file/dir\",\nsnake_cased: filename_extension\n}"
                    ],
                    "annotation": {
                        "line": "@return string",
                        "data_type": "string",
                        "name": null
                    }
                }
            ],
            "throws": null,
            "signature": "export function getFileSystemStructure(dir: string): any",
            "is_function": true,
            "fully_qualified_name": "Drash.Util.Exports.getFileSystemStructure"
        }
    }
}